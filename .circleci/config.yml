# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

install_cucu_dependencies: &install_cucu_dependencies
  run:
    name: install cucu dependencies
    command: pip install poetry && poetry install

build_cucu_python_package: &build_cucu_python_package
  run:
    name: build the cucu python package
    command: poetry build

install_cucu_globally: &install_cucu_globally
  run:
    name: install cucu globally
    command: pip install dist/cucu-*.tar.gz


orbs:
  browser-tools: circleci/browser-tools@1.2.4

jobs:
  pre-commit:
    docker:
      - image: cimg/python:3.9.7

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            pip install pre-commit
            pre-commit install-hooks

      - *install_cucu_dependencies
      - *build_cucu_python_package

      - run:
          name: install cucu globally
          command: pip install dist/cucu-*.tar.gz

      - run:
          name: run pre-commit validations
          command: |
            pre-commit run --show-diff-on-failure --from-ref origin/HEAD --to-ref HEAD

  test:
    docker:
      - image: cimg/python:3.9.7-browsers

    steps:
      - browser-tools/install-browser-tools
      - browser-tools/install-chrome
      - checkout
      - *install_cucu_dependencies
      - *build_cucu_python_package
      - *install_cucu_globally

      - run:
          name: run functional tests
          command: poetry run cucu run features --workers 2
          environment:
            COVERAGE_PROCESS_START: .coveragerc
            CUCU_COLOR_OUTPUT: false

      - run:
          name: generate html test report
          command: cucu report
          when: always

      - run:
          name: tar up results and report
          command: tar cvfz results.tgz results && tar cvfz report.tgz report
          when: always

      - store_artifacts:
          path: results.tgz

      - store_artifacts:
          path: report.tgz

      - store_artifacts:
          path: report/

      - run:
          name: run unit tests
          command: poetry run coverage run -m pytest  --junit-xml=results/unit-tests.xml
          when: always

      - run:
          name: move top level test results
          # avoids picking up other test results files from sub directories that
          # are from testing `cucu run` and producing irrelevant test results
          command: |
            mkdir -p test_results
            cp results/*.xml test_results

      - store_test_results:
          path: test_results/

      - run:
          name: combine coverage reports
          command: poetry run coverage combine .coverage.*

      - run:
          name: code coverage report
          command: |
            poetry run coverage html
            poetry run coverage report --fail-under=90

      - store_artifacts:
          path: htmlcov

workflows:
  build-n-test:
    jobs:
      - pre-commit
      - test
