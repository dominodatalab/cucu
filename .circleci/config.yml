# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
---
version: 2.1

commands:
  install_cucu_dependencies: &install_cucu_dependencies
    steps:
      - run:
          name: install cucu dependencies
          command: pip install poetry && poetry install

  build_cucu_python_package: &build_cucu_python_package
    steps:
      - run:
          name: build the cucu python package
          command: poetry build

  install_cucu_globally: &install_cucu_globally
    steps:
      - run:
          name: install cucu globally
          command: pip install dist/cucu-*.tar.gz

  setup_remote_docker_env: &setup_remote_docker_env
    steps:
      - setup_remote_docker:
          version: 20.10.14

  wait_for_selenium: &wait_for_selenium
    steps:
      - run:
          # retry connection every 5s x 60 which is a total of 5 minutes
          command: curl --retry 60 --retry-delay 5 --retry-connrefused http://localhost:4444

  run_functional_tests: &run_functional_tests
    parameters:
      browser:
        type: string
        default: "chrome"
    steps:
      - run:
          command: poetry run cucu run features --workers 8 --selenium-remote-url http://localhost:4444 --generate-report --junit junit_results --browser "<< parameters.browser >>"
          environment:
            COVERAGE_PROCESS_START: .coveragerc
            CUCU_COLOR_OUTPUT: false

  run_unit_tests: &run_unit_tests
    steps:
      - run:
          name: run unit tests
          command: poetry run coverage run -m pytest --junit-xml=results/unit-tests.xml

  code_coverage_check: &code_coverage_check
    steps:
      - run:
          command: |
            poetry run coverage combine .coverage.*
            poetry run coverage html
            poetry run coverage report --fail-under=85

executors:
  unit-test-executor:
    docker:
      - image: python:3.9.7

  chrome-test-executor:
    docker:
      - image: python:3.9.7
      - image: selenium/standalone-chrome:latest
        environment:
          SE_NODE_MAX_SESSIONS: 12
          SE_NODE_SESSION_TIMEOUT: 300
          SCREEN_WIDTH: 1366
          SCREEN_HEIGHT: 768
    resource_class: xlarge

  firefox-test-executor:
    docker:
      - image: python:3.9.7
      - image: selenium/standalone-firefox:latest
        environment:
          SE_NODE_MAX_SESSIONS: 12
          SE_NODE_SESSION_TIMEOUT: 300
          SCREEN_WIDTH: 1366
          SCREEN_HEIGHT: 768
    resource_class: xlarge

  edge-test-executor:
    docker:
      - image: python:3.9.7
      - image: selenium/standalone-edge:latest
        environment:
          SE_NODE_MAX_SESSIONS: 12
          SE_NODE_SESSION_TIMEOUT: 300
          SCREEN_WIDTH: 1366
          SCREEN_HEIGHT: 768
    resource_class: xlarge

jobs:
  pre-commit:
    docker:
      - image: cimg/python:3.9.7

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            pip install pre-commit
            pre-commit install-hooks

      - install_cucu_dependencies
      - build_cucu_python_package
      - install_cucu_globally

      - run:
          name: run pre-commit validations
          command: pre-commit run --show-diff-on-failure --from-ref origin/HEAD --to-ref HEAD

  test:
    parameters:
      browser:
        type: string
        default: "chrome"

    executor: << parameters.browser >>-test-executor

    steps:
      - checkout
      - install_cucu_dependencies
      - build_cucu_python_package
      - install_cucu_globally
      - setup_remote_docker_env
      - wait_for_selenium
      - run_functional_tests:
          browser: "<< parameters.browser >>"
      - run_unit_tests
      - code_coverage_check

      - run:
          name: tar up results and reporting
          command: |
            tar cvfz results.tgz results
            tar cvfz report.tgz report
            tar cvfz junit_results.tgz junit_results
          when: always

      - store_artifacts:
          path: results.tgz

      - store_artifacts:
          path: junit_results.tgz

      - store_artifacts:
          path: report.tgz

      - store_test_results:
          path: junit_results

      - store_artifacts:
          path: report/

  publish:
    docker:
      - image: cimg/python:3.9.7
    steps:
      - checkout
      - install_cucu_dependencies
      - build_cucu_python_package
      - run:
          name: Publish to private PyPI repository
          command: |
            poetry config repositories.private ${PUBLISH_REPOSITORY}
            poetry config http-basic.private ${PUBLISH_USERNAME} ${PUBLISH_PASSWORD}
            poetry publish -r private

workflows:
  build-n-test:
    jobs:
      - pre-commit
      - test:
          name: test-chrome
          browser: chrome
      - test:
          name: test-edge
          browser: edge
      - test:
          name: test-firefox
          browser: firefox
      - publish:
          filters:
            branches:
              only: main
          requires:
            - pre-commit
            - test-chrome
            - test-edge
            - test-firefox
