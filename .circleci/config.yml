# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
---
version: 2.1

parameters:
  python_version:
    type: string
    default: '3.11.7'
  selenium_version:
    type: string
    default: '124.0'
  se_node_max_sessions:
    type: integer
    default: 12
  se_node_session_timeout:
    type: integer
    default: 300
  screen_width:
    type: integer
    default: 1366
  screen_height:
    type: integer
    default: 768

workflows:
  build-test-publish:
    jobs:
      - pre-commit
      - test:
          name: test-chrome
          browser: chrome
          requires:
            - pre-commit
      - test:
          name: test-edge
          browser: edge
          requires:
            - test-chrome
      - test:
          name: test-firefox
          browser: firefox
          requires:
            - test-chrome
      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+/

jobs:
  pre-commit:
    docker:
      - image: cimg/python:3.12.3
    resource_class: medium
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            set +eo pipefail
            pip install --upgrade pip
            pip install pre-commit
            pre-commit install-hooks
      - run:
          name: install cucu dependencies
          command: |
            set +eo pipefail
            pip install poetry
            python -m virtualenv --upgrade-embed-wheels
            poetry install --no-ansi
      - run:
          name: build the cucu python package
          command: poetry build
      - run:
          name: install cucu globally
          command: pip install dist/cucu-*.tar.gz
      - run:
          name: run pre-commit validations
          command: pre-commit run --show-diff-on-failure --from-ref origin/HEAD --to-ref HEAD

  test:
    parameters:
      browser:
        type: string
        default: "chrome"
    docker:
      - image: cimg/python:<<pipeline.parameters.python_version>>
      - image: selenium/standalone-<<parameters.browser>>:<<pipeline.parameters.selenium_version>>
        environment:
          SE_NODE_MAX_SESSIONS: <<pipeline.parameters.se_node_max_sessions>>
          SE_NODE_SESSION_TIMEOUT: <<pipeline.parameters.se_node_session_timeout>>
          SCREEN_WIDTH: <<pipeline.parameters.screen_width>>
          SCREEN_HEIGHT: <<pipeline.parameters.screen_height>>
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: install cucu dependencies
          command: |
            set +eo pipefail
            pip install poetry
            python -m virtualenv --upgrade-embed-wheels
            poetry install --no-ansi
      - run:
          name: install test dependencies
          command: |
            set +eo pipefail
            apt-get update
            apt-get install -y expect
      - run:
          name: build the cucu python package
          command: poetry build
      - run:
          name: install cucu globally
          command: pip install dist/cucu-*.tar.gz
      - setup_remote_docker
      - run:
          name: wait_for_selenium
          # retry connection every 5s x 60 which is a total of 5 minutes
          command: curl --retry 60 --retry-delay 5 --retry-connrefused http://localhost:4444
      - run:
          name: run_functional_tests
          command: poetry run cucu run features --workers 6 --selenium-remote-url http://localhost:4444 --generate-report --junit junit_results --browser "<< parameters.browser >>"
          environment:
            COVERAGE_PROCESS_START: pyproject.toml  # set to config file
      - run:
          name: run unit tests
          command: poetry run coverage run -m pytest --junit-xml=results/unit-tests.xml
      - run:
          name: code_coverage_check
          command: |
            set +eo pipefail
            poetry run coverage combine .coverage.*
            poetry run coverage html
            poetry run coverage report --fail-under=70
      - run:
          name: tar up results and reporting
          command: |
            tar cvfz results.tgz results
            tar cvfz report.tgz report
            tar cvfz junit_results.tgz junit_results
          when: always
      - store_artifacts:
          path: results.tgz
      - store_artifacts:
          path: junit_results.tgz
      - store_artifacts:
          path: report.tgz
      - store_test_results:
          path: junit_results

  publish:
    docker:
      - image: cimg/python:<<pipeline.parameters.python_version>>
    steps:
      - checkout
      - run:
          name: install cucu dependencies
          command: |
            set +eo pipefail
            pip install poetry
            python -m virtualenv --upgrade-embed-wheels
            poetry install --no-ansi
      - run:
          name: build the cucu python package
          command: poetry build
      - run:
          name: Publish to private PyPI repository
          command: |
            set +eo pipefail
            poetry config repositories.private ${PUBLISH_REPOSITORY}
            poetry config http-basic.private ${PUBLISH_USERNAME} ${PUBLISH_PASSWORD}
            poetry publish -r private
