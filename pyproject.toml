[tool.poetry]
name = "cucu"
version = "0.165.0"
license = "MIT"
description = "Easy BDD web testing"
authors = ["Domino Data Lab <open-source@dominodatalab.com>"]
readme = "README.md"
homepage = ""
repository = ""
keywords = ["cucumber", "selenium"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Testing :: BDD",
]
include = [
    { path = "CHANGELOG.md", format = "sdist" },
    { path = "LICENSE", format = "sdist" },
]

[tool.poetry.scripts]
cucu = "cucu.cli:main"

[build-system]
requires = ["poetry-core>=1.3.2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
beautifulsoup4 = "^4.11.1"
behave = "^1.2.6"
chromedriver-autoinstaller = "^0.6"
click = "^8.1.3"
coverage = { version = "^7.2", extras = ["toml"] }
geckodriver-autoinstaller = "^0.1"
humanize = "^4.0.0"
importlib-metadata = "^6.7"
ipdb = "^0.13.9"
jellyfish = "^1.0"
Jinja2 = "^3.0.3"
pebble = "^5.0.3"
pygls = "^1.0"
PyYAML = "^6.0"
requests = "^2.27.1"
selenium = "^4.10"
tabulate = "^0.9"
tenacity = "^8.0.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
black = "^23.3"
ipdb = "^0.13.9"
pytest = "^7.4"
ruff = "^0.0"
safety = "^2.4.0b1"

[tool.black]
line-length = 80

[tool.ruff]
select = ["E", "F", "I", "Q0"]  # default options + isort
exclude = [".env", ".venv", "venv", "__init__.py"]
ignore = ["E501", "F403"]  # line_length, import *
line-length = 80

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.bandit]
exclude_dirs = [".env", ".venv", "venv"]

[tool.pytest]
junit_family = "xunit2"

[tool.coverage.run]
branch = true
concurrency = ["multiprocessing"]
omit = ["results"]
parallel = true
relative_files = true
source = ["src"]

[tool.coverage.report]
fail_under = 70
show_missing = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.5.1
    env_list =
        py310
        py39
        py38

    [testenv]
    commands = cucu run features --tags=report --tags=show-skips
"""
